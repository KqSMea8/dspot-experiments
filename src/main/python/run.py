import subprocessfrom itertools import productcmd = "mvn clean compile -q"subprocess.call(cmd, shell=True)cmd = "mvn dependency:build-classpath -q -Dmdep.outputFile=cp.txt"subprocess.call(cmd, shell=True)with open('cp.txt', 'r') as content_file:    classpath = content_file.read()classpath += ":target/classes"full_qualified_name_main_class="Main"root_properties="src/main/resources/"projects=["http-request"]ext_properties=".properties"iterations=[1, 3, 6]amplifiers=[ ("MethodAdd"), ("MethodRemove"), ("StatementAdderOnAssert"), ("TestDataMutator")] #StatementAddcartesian_product=[]for x in product(amplifiers, repeat=len(amplifiers)):    if len(set(x)) == len(amplifiers):        cartesian_product.append(x)for project in projects:    for iteration in iterations:        for amplifiersList in cartesian_product:            cmd = "java -Xmx8G -Xms4G -cp "            cmd += classpath            cmd += " " + full_qualified_name_main_class            cmd += " -p "            cmd += root_properties + project + ext_properties            cmd += " -i "            cmd += str(iteration)            cmd += " -a "            for amplifier in amplifiersList:                cmd += amplifier + ":"            subprocess.call(cmd, shell=True)